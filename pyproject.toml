[tool.poetry]
name = "api"
version = "0.1.0"
description = "API repository."
authors = [ "Simon Danielsson" ]
license = ""
readme = "README.md"
packages = []

[tool.poetry.scripts]
approved = "api.__main__:main"

[tool.poetry.dependencies]
python = "~3.11"
alembic = "^1.13.0"
asyncpg = "^0.27.0"
bcrypt = "^4.1.1"
coloredlogs = "~15.0"
fastapi = "^0.111.0"
greenlet = "^3.0.1"
httpx = "^0.27.0"
langchain = "^0.2.7"
langchain-community = "^0.2.7"
openai = "^1.35.8"
psycopg2-binary = "^2.9.9"
PyGithub = "^2.3.0"
python-box = "~7.1"
python-dotenv = "~1.0.1"
python-jose = "^3.3.0"
sqlalchemy = "^2.0.23"
streamlit = "^1.36.0"
uvicorn = "^0.24.0"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pre-commit = "~3.5"
pytest = "~7.4"
pytest-cov = "~4.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
add-trailing-comma = "*"
black = "*"
ipython = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
ruff = "*"
sqlfluff = "*"
types-cachetools = "^5.3.0.6"
types-PyYAML = "*"

[tool.pytest.ini_options]
timeout = "60"
addopts = [
    "--cov-report=html:test-reports/htmlcov",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=xml:test-reports/coverage.xml",
    "--cov=api",
    "--junitxml=test-reports/junit/junit.xml",
    "--no-cov-on-fail",
    "--strict-markers",
    "--verbose",
    "-r sxX",
]
cache_dir = ".cache"
testpaths = "tests"

[tool.mypy]
python_version = "3.11"
cache_dir = ".cache/mypy/"
check_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    # Do not complain if tests do not hit defensive assertion code.
    "raise AssertionError",
    "raise NotImplementedError",

    # Do not complain if non-runnable code is not run.
    "if __name__ == .__main__.:",
]
ignore_errors = true

[tool.ruff]
select = [ "ALL" ]
ignore = [
    "ANN401", # typing.Any disallowed
    "D104",   # docstring in every __init__.py file
    "D203",   # one-blank-line-before-class (incompatible with D211)
    "D213",   # multi-line-summary-second-line (incompatible with D212)
    "FA102",  # future-required-type-annotation
]

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"

[tool.ruff.per-file-ignores]
# Do not complain if __init__.py files have unused imports.
"__init__.py" = [ "F401" ]
# Do not complain if tests use the assert keyword.
"tests/*" = [ "S101" ]
