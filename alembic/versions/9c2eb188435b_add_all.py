"""Add all.

Revision ID: 9c2eb188435b
Revises:
Create Date: 2024-07-14 13:16:12.596407

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9c2eb188435b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if not op.get_bind().dialect.has_table(op.get_bind(), "users", schema="common_app"):
        op.create_table(
            "users",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("username", sa.String(), nullable=False),
            sa.Column("password_hash", sa.String(), nullable=False),
            sa.Column("is_active", sa.Boolean(), nullable=False),
            sa.Column("is_superuser", sa.Boolean(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
            schema="common_app",
        )
    if not op.get_bind().dialect.has_table(
        op.get_bind(),
        "repositories",
        schema="reviewer_app",
    ):
        op.create_table(
            "repositories",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("github_url", sa.String(), nullable=False),
            sa.Column("repository_name", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
            schema="reviewer_app",
        )
    if not op.get_bind().dialect.has_table(
        op.get_bind(),
        "pullrequests",
        schema="reviewer_app",
    ):
        op.create_table(
            "pullrequests",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("repository_id", sa.Integer(), nullable=True),
            sa.Column("pull_request_number", sa.Integer(), nullable=False),
            sa.ForeignKeyConstraint(
                ["repository_id"],
                ["reviewer_app.repositories.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            schema="reviewer_app",
        )

    if not op.get_bind().dialect.has_table(
        op.get_bind(),
        "reviews",
        schema="reviewer_app",
    ):
        op.create_table(
            "reviews",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("pull_request_id", sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(
                ["pull_request_id"],
                ["reviewer_app.pullrequests.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            schema="reviewer_app",
        )
    if not op.get_bind().dialect.has_table(
        op.get_bind(),
        "filereviews",
        schema="reviewer_app",
    ):
        op.create_table(
            "filereviews",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("review_id", sa.Integer(), nullable=True),
            sa.Column("content", sa.String(), nullable=False),
            sa.ForeignKeyConstraint(
                ["review_id"],
                ["reviewer_app.reviews.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            schema="reviewer_app",
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("filereviews", schema="reviewer_app")
    op.drop_table("reviews", schema="reviewer_app")
    op.drop_table("pullrequests", schema="reviewer_app")
    op.drop_table("repositories", schema="reviewer_app")
    op.drop_table("users", schema="common_app")
    # ### end Alembic commands ###
